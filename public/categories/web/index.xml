<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on Daniel Michaels | Software Developer</title>
    <link>https://danielms.site/categories/web/</link>
    <description>Recent content in web on Daniel Michaels | Software Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 13 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://danielms.site/categories/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web Scraping Javascript with Python</title>
      <link>https://danielms.site/blog/web-scraping-javascript-with-python-xhr/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danielms.site/blog/web-scraping-javascript-with-python-xhr/</guid>
      <description>Scraping Dynamic Pages with Python Web scraping Python is a great tool for web scraping tasks, it is efficient, easy to read and fast. Whenever looking to grab data from a site, the canonical packages are BeautifulSoup and Requests. Unfortunately, when our target site is dynamically rendered, BeautifulSoup can&amp;rsquo;t &amp;ldquo;see&amp;rdquo; those parts leading to a lot of head scratching. The often touted answer to this is Selenium which spins up a browser thereby rendering the JavaScript making it possible to scrape data from it.</description>
    </item>
    
    <item>
      <title>Ecosia</title>
      <link>https://danielms.site/blog/ecosia-tree-saving-browser/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://danielms.site/blog/ecosia-tree-saving-browser/</guid>
      <description>Ecosia Building awareness The search engine that plants trees.
As we welcome 2020, lets acknowledge that doing something to help make our planet more sustainable is worth our time and effort.
Not everyone need agree on this topic, but those that do and have yet to hear about Ecosia let me give you some background.
The tree planting search engine  79 million trees have been planted to date and every 0.</description>
    </item>
    
    <item>
      <title>Defending your apps</title>
      <link>https://danielms.site/blog/defence-mechanisms-for-web-apps/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://danielms.site/blog/defence-mechanisms-for-web-apps/</guid>
      <description>Web Application Defence Mechanisms  one rule; do not trust user input.
 Core defences The methods by which we can defend against attackers.
 Handling user access Handling user input Handling attacks or ensuring that the application works as intended when being directly targeted, and Handling the application itself so everything can be monitored, and configured correctly  User Access In most applications that have users, there will be several privileges or roles within the user space.</description>
    </item>
    
    <item>
      <title>Curl you an email for great good</title>
      <link>https://danielms.site/blog/curl-emails-for-great-good/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://danielms.site/blog/curl-emails-for-great-good/</guid>
      <description>Curl Today I learnt that Curl can also be used to send emails. One of my projects is to manage a fleet of embedded devices that communicate information back to our servers. Email is one part of this process. And, curl is installed on these devices, greatly simplifying things.
Syntax # gmail specific curl --url &amp;#39;smtps://smtp.gmail.com:587&amp;#39; --ssl-reqd \ --mail-from &amp;#39;username@gmail.com&amp;#39; --mail-rcpt &amp;#39;rcpt@email.com&amp;#39; \ --user &amp;#39;username@gmail.com:password&amp;#39; --insecure \ --upload-file fileToBeUploaded.txt Let&amp;rsquo;s break down each component:</description>
    </item>
    
    <item>
      <title>HTTP Methods Primer</title>
      <link>https://danielms.site/blog/http-basic-methods-and-verbs/</link>
      <pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://danielms.site/blog/http-basic-methods-and-verbs/</guid>
      <description>HTTP 101 Prefetch What happens when you type an address into the search bar and hit enter:
 The browser extracts the domain name from the search bar. The users Domain Name System (DNS) cache is queried. If no previous entries are found a DNS request is sent via your configured DNS server. After getting the IP address via DNS, the host will initiate a TCP connection with that address. If the connection is successful, a response will be sent from the server and its data will be rendered using HTTP.</description>
    </item>
    
  </channel>
</rss>
