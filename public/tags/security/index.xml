<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on Daniel Michaels | Developer | Technical Lead</title>
    <link>https://danielms.site/tags/security/</link>
    <description>Recent content in security on Daniel Michaels | Developer | Technical Lead</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 19 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://danielms.site/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Defending your apps</title>
      <link>https://danielms.site/blog/defence-mechanisms-for-web-apps/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://danielms.site/blog/defence-mechanisms-for-web-apps/</guid>
      <description>Web Application Defence Mechanisms  one rule; do not trust user input.
 Core defences The methods by which we can defend against attackers.
 Handling user access Handling user input Handling attacks or ensuring that the application works as intended when being directly targeted, and Handling the application itself so everything can be monitored, and configured correctly  User Access In most applications that have users, there will be several privileges or roles within the user space.</description>
    </item>
    
    <item>
      <title>HTTP Methods Primer</title>
      <link>https://danielms.site/blog/http-basic-methods-and-verbs/</link>
      <pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://danielms.site/blog/http-basic-methods-and-verbs/</guid>
      <description>HTTP 101 Prefetch What happens when you type an address into the search bar and hit enter:
 The browser extracts the domain name from the search bar. The users Domain Name System (DNS) cache is queried. If no previous entries are found a DNS request is sent via your configured DNS server. After getting the IP address via DNS, the host will initiate a TCP connection with that address. If the connection is successful, a response will be sent from the server and its data will be rendered using HTTP.</description>
    </item>
    
    <item>
      <title>HTTP Security Basics</title>
      <link>https://danielms.site/blog/http-security-basics/</link>
      <pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://danielms.site/blog/http-security-basics/</guid>
      <description>HTTP Basics HTTP is an application level message based model where the client sends a request and the server returns a response. HTTP uses a stateful protocol - TCP - but is stateless, where each request is connectionless avoiding the need for servers to hold an open connection.
HTTP Requests The first line of every HTTP request has three (3) items, separated by spaces:
 The verb - GET,PUT,DELETE,POST,TRACE,CONNECT,OPTIONS, or HEAD The requested URL, typically the name of the resource plus an optional query string.</description>
    </item>
    
  </channel>
</rss>